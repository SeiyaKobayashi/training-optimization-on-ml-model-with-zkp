/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Challenge,
  ChallengeInterface,
} from "../../../../contracts/src/libraries/Challenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_difficulty",
        type: "uint256",
      },
    ],
    name: "generateChallenge",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610473610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e9489a611461003a575b600080fd5b610054600480360381019061004f9190610108565b61006a565b604051610061919061014e565b60405180910390f35b600061009e4233604051602001610082929190610204565b60405160208183030381529060405280519060200120836100a5565b9050919050565b60008160026100b49190610392565b8360001c6100c2919061040c565b60001b905092915050565b600080fd5b6000819050919050565b6100e5816100d2565b81146100f057600080fd5b50565b600081359050610102816100dc565b92915050565b60006020828403121561011e5761011d6100cd565b5b600061012c848285016100f3565b91505092915050565b6000819050919050565b61014881610135565b82525050565b6000602082019050610163600083018461013f565b92915050565b6000819050919050565b61018461017f826100d2565b610169565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b58261018a565b9050919050565b60008160601b9050919050565b60006101d4826101bc565b9050919050565b60006101e6826101c9565b9050919050565b6101fe6101f9826101aa565b6101db565b82525050565b60006102108285610173565b60208201915061022082846101ed565b6014820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156102b65780860481111561029257610291610230565b5b60018516156102a15780820291505b80810290506102af8561025f565b9450610276565b94509492505050565b6000826102cf576001905061038b565b816102dd576000905061038b565b81600181146102f357600281146102fd5761032c565b600191505061038b565b60ff84111561030f5761030e610230565b5b8360020a91508482111561032657610325610230565b5b5061038b565b5060208310610133831016604e8410600b84101617156103615782820a90508381111561035c5761035b610230565b5b61038b565b61036e848484600161026c565b9250905081840481111561038557610384610230565b5b81810290505b9392505050565b600061039d826100d2565b91506103a8836100d2565b92506103d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846102bf565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610417826100d2565b9150610422836100d2565b925082610432576104316103dd565b5b82820690509291505056fea264697066735822122067f41c4db8fd6ab51b810aa2de15ed90a11d950d08e8c5911de010ae2b01cf0f64736f6c63430008110033";

type ChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Challenge__factory extends ContractFactory {
  constructor(...args: ChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Challenge> {
    return super.deploy(overrides || {}) as Promise<Challenge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Challenge {
    return super.attach(address) as Challenge;
  }
  override connect(signer: Signer): Challenge__factory {
    return super.connect(signer) as Challenge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChallengeInterface {
    return new utils.Interface(_abi) as ChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Challenge {
    return new Contract(address, _abi, signerOrProvider) as Challenge;
  }
}
