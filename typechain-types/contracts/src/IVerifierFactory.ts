/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace IVerifierFactory {
  export type ModelArrayElementStruct = {
    contentId: PromiseOrValue<BytesLike>;
    name: PromiseOrValue<string>;
    contractAddress: PromiseOrValue<string>;
  };

  export type ModelArrayElementStructOutput = [string, string, string] & {
    contentId: string;
    name: string;
    contractAddress: string;
  };
}

export interface IVerifierFactoryInterface extends utils.Interface {
  functions: {
    "createChildContract(bytes32,string,string)": FunctionFragment;
    "getClonedVerifierContract(bytes32)": FunctionFragment;
    "getMasterVerifierContract()": FunctionFragment;
    "getModels(uint32,uint32)": FunctionFragment;
    "getModelsByOwnerAddress(address,uint32,uint32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "createChildContract"
      | "getClonedVerifierContract"
      | "getMasterVerifierContract"
      | "getModels"
      | "getModelsByOwnerAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createChildContract",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getClonedVerifierContract",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMasterVerifierContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getModels",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getModelsByOwnerAddress",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "createChildContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClonedVerifierContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMasterVerifierContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getModels", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getModelsByOwnerAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IVerifierFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IVerifierFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createChildContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      _modelName: PromiseOrValue<string>,
      _modelDescription: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getClonedVerifierContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getMasterVerifierContract(overrides?: CallOverrides): Promise<[string]>;

    getModels(
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[IVerifierFactory.ModelArrayElementStructOutput[]]>;

    getModelsByOwnerAddress(
      _ownerAddress: PromiseOrValue<string>,
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[IVerifierFactory.ModelArrayElementStructOutput[]]>;
  };

  createChildContract(
    _modelContentId: PromiseOrValue<BytesLike>,
    _modelName: PromiseOrValue<string>,
    _modelDescription: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getClonedVerifierContract(
    _modelContentId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  getMasterVerifierContract(overrides?: CallOverrides): Promise<string>;

  getModels(
    _offset: PromiseOrValue<BigNumberish>,
    _limit: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IVerifierFactory.ModelArrayElementStructOutput[]>;

  getModelsByOwnerAddress(
    _ownerAddress: PromiseOrValue<string>,
    _offset: PromiseOrValue<BigNumberish>,
    _limit: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IVerifierFactory.ModelArrayElementStructOutput[]>;

  callStatic: {
    createChildContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      _modelName: PromiseOrValue<string>,
      _modelDescription: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getClonedVerifierContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    getMasterVerifierContract(overrides?: CallOverrides): Promise<string>;

    getModels(
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IVerifierFactory.ModelArrayElementStructOutput[]>;

    getModelsByOwnerAddress(
      _ownerAddress: PromiseOrValue<string>,
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IVerifierFactory.ModelArrayElementStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    createChildContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      _modelName: PromiseOrValue<string>,
      _modelDescription: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getClonedVerifierContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMasterVerifierContract(overrides?: CallOverrides): Promise<BigNumber>;

    getModels(
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getModelsByOwnerAddress(
      _ownerAddress: PromiseOrValue<string>,
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createChildContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      _modelName: PromiseOrValue<string>,
      _modelDescription: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getClonedVerifierContract(
      _modelContentId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMasterVerifierContract(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getModels(
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getModelsByOwnerAddress(
      _ownerAddress: PromiseOrValue<string>,
      _offset: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
